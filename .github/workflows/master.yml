name: on push

on:
  push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Node.js (reads version from .nvmrc)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"  # Ensure .nvmrc exists in your repo!

      # Install dependencies
      - name: Install dependencies
        run: npm ci

        # Start the prroject (optional: only for testing)
      - name: test
        run: npm run test

      # Start the project (optional: only for testing)
      - name: Build app
        run: npm run build

        # 3. Zainstaluj dependencies i zbuduj TS → JS
      - name: Install & build Lambda
        run: |
           cd cloud
           npm ci
           npx tsc

        # 4. Zapakuj dist + node_modules do ZIP
      - name: Package Lambda
        run: |
          cd cloud/dist/lambdas
           zip -r ../../lambda.zip .

        # 5. Wypchnij ZIP do istniejącej funkcji
      - name: Update Lambda function code
        env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           AWS_REGION: eu-north-1
           FUNCTION_NAME: ContactFormLambda
        run: |
           aws lambda update-function-code \
             --function-name "$FUNCTION_NAME" \
             --zip-file fileb://lambda.zip \
             --region "$AWS_REGION"

      - name: Deploy to S3
        uses: ./.github/actions/aws-s3-sync
        with:
          bucket-name: 'ci-cd-aws-pwo'
          bundle-dir: 'dist/ci-cd-aws/browser'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Invalidate CloudFront caches
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*".
